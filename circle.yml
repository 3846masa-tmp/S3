# sample circle.yml for IronMan-s3
machine:
  node:
    version: 4.1.0
  #our docker registry
  environment:
    docker_server: dochub.ironmann.io:5000
  #we package the software through docker
  services:
    - docker

checkout:
  # we let circleci checkout the project quietly in the machine
  post:
    # checkout the IronMan-ci
    - git clone git@github.com:scality/IronMan-CI.git
    # place the file gathered from IronMan-CI where needed
    - mv IronMan-CI/deployment .
    - mv IronMan-CI/ci/matryoshka.py ./tests
    # we are in the project so we just copy the files where appropriate for building the docker image
    - bash  ./deployment/checkout-local.bash
    # move the ssh key to the project dir where the Dockerfile will consume them
    # (required for npm install / npm test during the docker image construction
    # to access the private repo)
    - cp -rp ~/.ssh ./deployment/checkout/project
    - sed -i "s/\/home\/ubuntu/\~/g" ./deployment/checkout/project/.ssh/config
    - chmod 600 ./deployment/checkout/project/.ssh/config

dependencies:
  pre:
    - sudo apt-get install python-pip
    - sudo -H pip install flake8
  post:
    # this is required to access the docker registry
    # the variable  docker_password and docker_user should be set in the circleci project settings
    # There is also the option of specifying an email address (with -e) but we have opted not to here.
    - docker login -e ${CIRCLE_USERNAME}@{CIRCLE_PROJECT_USERNAME}.com -p ${docker_password} -u ${docker_user} ${docker_server}
    # fetch from the registry the various docker images we need to run the test
    # there could be more than one
    - docker pull ${docker_server}/ironman-base
    # dependencies for testing with matryoshka
    - sudo apt-get -y update
    - sudo apt-get -y install build-essential python-dev libffi-dev libssl-dev
    - sudo pip install docker-py
    - sudo pip install pyyaml

test:
  pre:
    # we build the docker image corresponding to the project
    # on your laptop use :
    #       export CIRCLE_PROJECT_REPONAME=$(basename `git rev-parse --show-toplevel`)
    #       export CIRCLE_BRANCH=$(git branch | grep "*" | grep -E -o "[^\* ]+" )
    # the branch tags contains / characters that the docker registy refuses (allowed characters are 0-9a-z_ )
    - REPO=$(echo ${CIRCLE_PROJECT_REPONAME} | tr '[:upper:]' '[:lower:]') && cd ./deployment && docker build -t ${REPO}:${CIRCLE_SHA1} .
    # we sent the docker image we just built into the registry
    - REPO=$(echo ${CIRCLE_PROJECT_REPONAME} | tr '[:upper:]' '[:lower:]') && docker tag ${REPO}:${CIRCLE_SHA1} ${docker_server}/${REPO}:${CIRCLE_SHA1}
    #- REPO=$(echo ${CIRCLE_PROJECT_REPONAME} | tr '[:upper:]' '[:lower:]') && docker push ${docker_server}/${REPO}:${CIRCLE_SHA1}
    # retag the local image as latest
    - REPO=$(echo ${CIRCLE_PROJECT_REPONAME} | tr '[:upper:]' '[:lower:]') && docker tag ${REPO}:${CIRCLE_SHA1} ${REPO}:latest
  override:
    - npm run --silent lint
    - npm run --silent lint_md
    - flake8 $(git ls-files '*.py')
    - npm test
  post:
    # trigger the execution of the functional tests
    - REPO=$(echo ${CIRCLE_PROJECT_REPONAME} | tr '[:upper:]' '[:lower:]') && python ./tests/matryoshka.py ${REPO}
    # we use test post as an opportunity to clean up
    # this step is more a reminder if you run the test on your laptop
    #- rm -rf ./deployment ./ci/matryoshka.py
